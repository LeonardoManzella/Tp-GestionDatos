--------------------------------------- Inicio Dropeos---------------------------------------------
IF OBJECT_ID('KFC.pro_top_5_cancelaciones_especialidad') IS NOT NULL
DROP PROCEDURE KFC.pro_top_5_cancelaciones_especialidad ;
GO
-----------------
IF OBJECT_ID('KFC.pro_top_5_profesional_popular') IS NOT NULL
DROP PROCEDURE KFC.pro_top_5_profesional_popular ;
GO
----------------
IF OBJECT_ID('KFC.pro_top_5_compradores_bonos') IS NOT NULL
DROP PROCEDURE KFC.pro_top_5_compradores_bonos ;
GO
----------------
IF OBJECT_ID('KFC.pro_top_5_espec_Atenciones') IS NOT NULL
DROP PROCEDURE KFC.pro_top_5_espec_Atenciones;
GO
---------------
IF OBJECT_ID('KFC.pro_top_5_prof_menos_trabajo') IS NOT NULL
DROP PROCEDURE KFC.pro_top_5_prof_menos_trabajo;
GO
-----------------------------------------Fin Dropeos---------------------------------------------
-------------------------------------- Inicio Procedures----------------------------------------
CREATE PROCEDURE KFC.pro_top_5_cancelaciones_especialidad @año INT, @plazo_init INT, @plazo_fin INT
BEGIN
 SELECT DISTINCT TOP 5 ESP.ESPE_ID
                    id
                  , esp.descripcion
		  , isnull(count(*),0) cancelaciones	
          FROM
                    kfc.turnos tu
                    INNER JOIN
                     (select * from kfc.cancelaciones c
		where
		             DATEPART(YEAR,c.fecha_cancel) = @año
            		AND     DATEPART(MONTH,c.fecha_cancel) >= @plazo_init
            		AND     DATEPART(MONTH,c.fecha_cancel) <= @plazo_fin
					) ca
                    ON
                              tu.turno_id = ca.turno_id
                    INNER JOIN
                              kfc.especialidades esp
                    ON
                              esp.espe_id = tu.espe_id
          GROUP BY
                    esp.espe_id
                  , esp.descripcion
          ORDER BY
                    isnull(count(*),0) DESC;
         
END;
GO

------------------------------------------------------------

CREATE PROCEDURE KFC.pro_top_5_profesional_popular  
@año INT, @plazo_init INT, @plazo_fin INT, @plan_id INT
AS
BEGIN
                   SELECT DISTINCT TOP 5   PRO.PROF_ID
                  , concat(pro.apellido,', ', pro.nombre) profesional
                  , esp.espe_id                           especialidad
                  , esp.descripcion
	, isnull(count(*),0)		    turnos
          FROM
                    ( select  * from kfc.turnos t 
		          WHERE
                     DATEPART(YEAR,t.fecha_hora) = @año
        	    AND     DATEPART(MONTH,t.fecha_hora) >= @plazo_init
	    AND     DATEPART(MONTH,t.fecha_hora) <= @plazo_fin
		)tu
                    INNER JOIN
                              kfc.especialidades esp
                    ON
                              esp.espe_id = tu.espe_id
                    INNER JOIN
                              kfc.profesionales pro
                    ON
                              pro.prof_id = tu.prof_id
                    INNER JOIN
                             (select * from kfc.afiliados  a
		WHERE
		@plan_id  is null or @plan_id  = afi.plan_id
		)afi
                    ON
                              afi.afil_id = tu.afil_id
          GROUP BY
                    pro.prof_id
				  , concat(pro.apellido,', ', pro.nombre)
                  , esp.espe_id
                  , esp.descripcion
          ORDER BY
                    isnull(COUNT(*),0) DESC;
end;
GO

-------------------------------------------------------

CREATE PROCEDURE KFC.pro_top_5_compradores_bonos @año INT, @plazo_init INT, @plazo_fin INT
as
begin
          SELECT DISTINCT TOP 5 CONCAT(afi.apellido,', ', afi.nombre) titular
                  , ISNULL(afi.personas_a_car,0) grupo_familiar
		  , isnull(count(*),0)		    bonos
          FROM
                    kfc.afiliados afi
                    INNER JOIN
                              (select * from kfc.bonos bo
							  Where	   DATEPART(YEAR,bo.fecha_compra) = @año
								AND    DATEPART(MONTH,bo.fecha_compra) >= @plazo_init
								AND    DATEPART(MONTH,bo.fecha_compra) <= @plazo_fin
							  ) b

                    ON
                          afi.afil_id = kfc.obtener_titular(b.afil_id)
						  
          GROUP BY
                    kfc.obtener_titular(b.afil_id)
					,ISNULL(afi.personas_a_car,0)
					,afi.apellido, afi.nombre
          ORDER BY
                    isnull(COUNT(*),0) DESC;

end;
GO

----------------------------------------------------------------------------

CREATE PROCEDURE KFC.pro_top_5_espec_Atenciones @año INT, @plazo_init INT, @plazo_fin INT
AS
BEGIN

          SELECT DISTINCT TOP 5  ESP.ESPE_ID
                    especialidad
                  , esp.descripcion
		  , isnull(count(*),0)  atenciones
          FROM
                    (select * from kfc.turnos t 
					
WHERE
                    DATEPART(YEAR,t.fecha_hora) = @año
        	    AND     DATEPART(MONTH,t.fecha_hora) >= @plazo_init
		    AND     DATEPART(MONTH,t.fecha_hora) <= @plazo_fin					
					) tu
                    INNER JOIN
                              kfc.atenciones at
                    ON
                              tu.turno_id = at.turno_id
                    INNER JOIN
                              kfc.especialidades esp
                    ON
                              esp.espe_id = tu.espe_id
          
          GROUP BY
                    esp.espe_id
                  , esp.descripcion
          ORDER BY
                    isnull(COUNT(*),0) DESC;
END;
GO

---------------------------------------------------------------------

CREATE PROCEDURE KFC.pro_top_5_prof_menos_trabajo @año INT, @plazo_init INT, @plazo_fin INT, @plan_id INT, @esp_id INT
AS
BEGIN
          SELECT DISTINCT TOP 5  CONCAT(pro.apellido,', ', pro.nombre) profesional
                  , esp.descripcion                 especialidad
                  , pl.descripcion                  nombre_plan
		  , isnull(count(*),0)/4	    hs_trabajadas
		--SUM(tu.duracion)
          FROM
                    (select * from kfc.bonos bo
					where
					@plan_id is null OR bo.plan_id = @plan_id
					) b
                    INNER JOIN
                              kfc.atenciones at
                    ON
                              b.bono_id = at.bono_id
                    INNER JOIN
                              (select * from kfc.turnos t
							  WHERE
                    DATEPART(YEAR,t.fecha_hora) = @año
        	    AND     DATEPART(MONTH,t.fecha_hora) >= @plazo_init
		    AND     DATEPART(MONTH,t.fecha_hora) <= @plazo_fin
				and @espe_id is null OR @espe_id = t.espe_id 
							   )tu
                    ON
                              tu.turno_id = at.turno_id
                    INNER JOIN
                              kfc.especialidades esp
                    ON
                              esp.espe_id = tu.espe_id
                    INNER JOIN
                              kfc.profesionales pro
                    ON
                              pro.prof_id = tu.prof_id
                    INNER JOIN
                              kfc.planes pl
                    ON
                              b.plan_id = pl.plan_id 
GROUP BY
                    pro.prof_id
	, pro.nombre, pro.apellido
	, b.plan_id
                  , esp.descripcion
                  , pl.descripcion
          ORDER BY
                    isnull(COUNT(*),0)/4 ASC;
END;
GO