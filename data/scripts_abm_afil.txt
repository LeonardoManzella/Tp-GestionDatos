-------------------------------------
----------ALTA AFILIADO
------------------------------------
USE [GD2C2016]
GO
/****** Object:  StoredProcedure [KFC].[alta_afiliado]    Script Date: 08/12/2016 23:56:51 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [KFC].[alta_afiliado]( @nombre VARCHAR(255),
									@apellido                                   VARCHAR(255),
									@tipo_doc                                   VARCHAR(25),
									@nro_doc                                    NUMERIC(18,0),
									@direccion                                  VARCHAR(255),
									@telefono                                   NUMERIC(18,0),
									@mail                                       VARCHAR(255),
									@sexo                                       CHAR(1),
									@fecha_nac                                  DATETIME,
									@estado                                     INT,
									@plan                                       INT,
									@usuario                                    INT,
									@afil_id									NUMERIC(18,0) OUTPUT )
AS
BEGIN
        SET @afil_id = -1;
        BEGIN TRY
                    BEGIN TRANSACTION

					
					BEGIN
					insert into kfc.usuarios(nick, pass, habilitado, intentos) values(@mail,HASHBYTES('SHA2_256',@mail),1,0);
					SELECT @usuario = @@IDENTITY
					END;

                    INSERT INTO kfc.afiliados
                            (
                                      nombre
                                    , apellido
                                    , tipo_doc
                                    , numero_doc
                                    , direccion
                                    , telefono
                                    , mail
                                    , sexo
                                    , fecha_nacimiento
                                    , estado_id
                                    , plan_id
                                    , us_id
                                    , habilitado
                            )
                            VALUES
                            (
                                        @nombre
                                    , @apellido
                                    , @tipo_doc
                                    , @nro_doc
                                    , @direccion
                                    , @telefono
                                    , @mail
                                    , @sexo
                                    , @fecha_nac
                                    , @estado
                                    , @plan
                                    , @usuario
                                    , 1
                            )
                    ;
                              
                    SELECT @afil_id = @@IDENTITY;
                              
                    COMMIT;
                    RETURN
        END TRY
        BEGIN CATCH
                    IF @@trancount > 0
                    ROLLBACK TRANSACTION;
                    PRINT 'Afiliado No Ingresado.';
                    THROW
        END CATCH
END;


-------------------------------------
----------ALTA AFILIADO ADJUNTO
------------------------------------

USE [GD2C2016]
GO
/****** Object:  StoredProcedure [KFC].[alta_afiliado_adjunto]    Script Date: 08/12/2016 22:52:42 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE KFC.alta_afiliado_adjunto ( @nombre VARCHAR(255),
									@apellido                                   VARCHAR(255),
									@tipo_doc                                   VARCHAR(25),
									@nro_doc                                    NUMERIC(18,0),
									@direccion                                  VARCHAR(255),
									@telefono                                   NUMERIC(18,0),
									@mail                                       VARCHAR(255),
									@sexo                                       CHAR(1),
									@fecha_nac                                  DATETIME,
									@estado                                     INT,
									@plan                                       INT,
									@afil_id_titular							INT,
									@afil_id									NUMERIC(18,0) OUTPUT)
AS
declare
 @id int;
declare
 @usuario int;
begin 
select @id= MAX(af.afil_id) +1 from kfc.afiliados af where Floor(af.afil_id/100) = Floor(@afil_id_titular/100)
select @usuario = us_id from kfc.afiliados where afil_id = @afil_id_titular;

SET IDENTITY_INSERT KFC.afiliados ON
BEGIN TRANSACTION
	BEGIN TRY
	INSERT INTO KFC.afiliados
			  (         afil_id
					  ,  nombre
                      , apellido
					  , tipo_doc
                      , numero_doc
                      , direccion
                      , telefono
                      , mail
                      , sexo
                      , fecha_nacimiento
                      , estado_id
                      , plan_id
                      , us_id
                      , habilitado
			  ) VALUES
				(		@id
				,@nombre
				, @apellido
				, @tipo_doc
				, @nro_doc
				, @direccion
				, @telefono
				, @mail
				, @sexo
				, @fecha_nac
				, @estado
				, @plan
				, @usuario
				, 1
				);

	 select @afil_id = @id;
	SET IDENTITY_INSERT KFC.afiliados OFF;

	
     Update kfc.afiliados 
	 set personas_a_car = ISNULL(personas_a_car,0)+1
	 where afil_id = @afil_id_titular;

	 commit;
	END TRY
BEGIN CATCH
		ROLLBACK;
		THROW;
END CATCH
end

--------------------------
------ BAJA AFILIADO
--------------------------
ALTER PROCEDURE [KFC].[baja_afiliado] @afiliado INT, @fecha DATETIME
AS
DECLARE @plan INT
BEGIN
BEGIN TRY
	
	BEGIN TRANSACTION
		UPDATE kfc.afiliados
		SET habilitado = 0,
			@plan = plan_id
		WHERE afil_id = @afiliado;
	
	
	Insert Into kfc.historial_afiliados values(@afiliado, @fecha ,@plan,'El afiliado ha sido dado de baja')

	
	DELETE FROM turnos WHERE afil_id = @afiliado;

	IF (floor(@afiliado/100)*100+1) = @afiliado
	EXECUTE	KFC.baja_grupo_afiliado @afiliado , @fecha
	
COMMIT;
END TRY
BEGIN CATCH 
       IF @@trancount > 0
       ROLLBACK TRANSACTION;
       PRINT 'Afiliado No Eliminado.';
       THROW
END CATCH
END

------------------	
------- BAJA GRUPO FAMILIAR
------------------


CREATE PROCEDURE KFC.baja_grupo_afiliado @afiliado INT, @fecha DATETIME
PROCEDURE KFC.baja_grupo_afiliado @afiliado INT, @fecha DATETIME
AS
declare @interno int
BEGIN
	DECLARE adjuntos CURSOR FOR   
	select afil_id from afiliados where floor(afil_id/100) = floor(@afiliado/100) and habilitado = 1  
	
	OPEN adjuntos  
  	FETCH NEXT FROM adjuntos
	INTO @interno

	WHILE @@FETCH_STATUS = 0  
	BEGIN 
	EXECUTE KFC.baja_afiliado @interno, @fecha
	FETCH NEXT FROM adjuntos
	INTO @interno
	END 
END